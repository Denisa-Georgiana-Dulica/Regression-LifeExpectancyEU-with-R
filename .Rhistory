PackageNames <- c("tidyverse","gplots","plm","readxl","foreign","lmtest")
for(i in PackageNames){
if(!require(i, character.only = T)){
install.packages(i, dependencies = T)
require(i, character.only = T)
}
}
data <- read_excel("C:\Users\User\R_project\Proiect_econometrie\global_health_Europe.csv")
data <- read_excel("C:/Users/User/R_project/Proiect_econometrie/global_health_Europe.csv")
rm(list = ls())
directory <- "C:/Users/User/R_project/Proiect_econometrie/"
global_health_panel <- read.csv(paste0(directory, "global_health_Europe.csv"), sep = ";")
View(global_health_panel)
View(global_health_panel)
data <- read_excel("C:/Users/User/R_project/Proiect_econometrie/global_health_Europe.xlsx")
View(data)
View(data)
panel_data <- read_excel("C:/Users/User/R_project/Proiect_econometrie/global_health_Europe.xlsx")
View(panel_data)
View(panel_data)
# Statistici descriptive
summary(panel_data)
pd.df <- pdata.frame(panel_data, index = c("country","year"), drop.index = TRUE)
pd.df <- pdata.frame(panel_data, index = c("Country","Year"), drop.index = TRUE)
#Facem o analiza exploratorie a datelor unde vom observa evolutia sperantei de viata pentru fiecare tara
coplot(Life_Expentancy ~ Year|Country, type="l", data=panel_data)
#Facem o analiza exploratorie a datelor unde vom observa evolutia sperantei de viata pentru fiecare tara
coplot(Life_Expectancy ~ Year|Country, type="l", data=panel_data)
#Heterogeneitatea transversala
#Analizam cum difera speranta la viata in tarile studiate
plotmeans(Life_Expectancy ~ Country, main = 'Heterogeneitate transversala', data = panel_data)
#Facem o analiza exploratorie a datelor unde vom observa evolutia sperantei de viata pentru fiecare tara
coplot(Life_Expectancy ~ Year|Country, type="l", data=panel_data)
#Heterogeneitatea transversala
#Analizam cum difera speranta la viata in tarile studiate
plotmeans(Life_Expectancy ~ Country, main = 'Heterogeneitate transversala', data = panel_data)
#Import pachetele si definesc setul de date de tip panel pentru 42 de tari din Europa pe 10 ani 2012-2021
PackageNames <- c("tidyverse","gplots","plm","readxl","foreign","lmtest")
#Heterogeneitatea transversala
#Analizam cum difera speranta la viata in tarile studiate
plotmeans(Life_Expectancy ~ Country, main = 'Heterogeneitate transversala', data = panel_data)
#Analizam cum difera speranta la viata in anii studiati
plotmeans(Life_Expectancy ~ Year, main = 'Heterogeneitate transversala', data = panel_data)
#Analizam cum difera speranta la viata in anii studiati
plotmeans(Life_Expectancy ~ Year, main = 'Heterogeneitate temporala', data = panel_data)
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Estimez un model de regresie OLS
ols <- lm(Sanitary_Expense_Per_Capita+Water_Access_Percent+Unemployment_Rate, data = panel_data)
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Estimez un model de regresie OLS
ols <- lm(Life_Expectancy ~Sanitary_Expense_Per_Capita+Water_Access_Percent+Unemployment_Rate, data = panel_data)
summary(ols)
panel_data$EU_East <- ifelse(global_health$Country %in% c('Albania', 'Armenia', 'Azerbaijan', 'Belarus', 'Bosnia and Herzegovina',
'Bulgaria', 'Croatia', 'Czech Republic', 'Estonia', 'Georgia',
'Hungary', 'Kazakhstan', 'Kyrgyzstan', 'Latvia', 'Lithuania',
'Moldova', 'Montenegro', 'Poland', 'Romania', 'Russia', 'Serbia',
'Slovakia', 'Slovenia', 'Ukraine', 'North Macedonia', 'Kosovo'), 1, 0)
panel_data$EU_East <- ifelse(panel_data$Country %in% c('Albania', 'Armenia', 'Azerbaijan', 'Belarus', 'Bosnia and Herzegovina',
'Bulgaria', 'Croatia', 'Czech Republic', 'Estonia', 'Georgia',
'Hungary', 'Kazakhstan', 'Kyrgyzstan', 'Latvia', 'Lithuania',
'Moldova', 'Montenegro', 'Poland', 'Romania', 'Russia', 'Serbia',
'Slovakia', 'Slovenia', 'Ukraine', 'North Macedonia', 'Kosovo'), 1, 0)
ols <- lm(Life_Expectancy ~Sanitary_Expense_Per_Capita+Water_Access_Percent+Unemployment_Rate+EU_East, data = panel_data)
summary(ols)
ols <- lm(Life_Expectancy ~Sanitary_Expense_Per_Capita+Water_Access_Percent+Unemployment_Rate, data = panel_data)
summary(ols)
ols <- lm(Life_Expectancy ~Sanitary_Expense_Per_Capita+Water_Access_Percent+Unemployment_Rate+EU_East, data = panel_data)
summary(ols)
ols <- lm(Life_Expectancy ~Sanitary_Expense_Per_Capita+Unemployment_Rate+EU_East, data = panel_data)
summary(ols)
ols <- lm(Life_Expectancy ~Sanitary_Expense_Per_Capita+Water_Access_Percent+Unemployment_Rate+EU_East, data = panel_data)
summary(ols)
vif(ols)
install.packages("car")
library(car)
vif(ols)
ols <- lm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Water_Access_Percent+Unemployment_Rate+EU_East, data = panel_data)
summary(ols)
yhat <- ols$fitted # valori estimate
ggplot(data, aes(x=Sanitary_Expense_Per_Capita, y=Life_Expectancy))+
geom_point()+
geom_smooth(method='lm', se=FALSE)+
theme_bw()
ggplot(data, aes(x=Sanitary_Expense_Per_Capita, y=Life_Expectancy))+
geom_point()+
geom_smooth(method='lm', se=FALSE)+
theme_bw()
ggplot(data, aes(x=Sanitary_Expense_Per_Capita, y=Life_Expectancy))+
geom_point()+
geom_smooth(method='lm', se=FALSE)+
theme_bw()
ggplot(panel_data, aes(x=Sanitary_Expense_Per_Capita, y=Life_Expectancy))+
geom_point()+
geom_smooth(method='lm', se=FALSE)+
theme_bw()
ols <- lm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Water_Access_Percent+Unemployment_Rate+EU_East, data = panel_data)
summary(ols)
'Slovakia', 'Slovenia', 'Ukraine', 'North Macedonia', 'Kosovo'), 1, 0)
ols <- lm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Unemployment_Rate+EU_East, data = panel_data)
summary(ols)
ols <- lm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Water_Access_Percent+Unemployment_Rate+EU_East, data = panel_data)
summary(ols)
ols <- lm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Unemployment_Rate+EU_East, data = panel_data)
summary(ols)
ols <- lm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Unemployment_Rate+Water_Access_Percent, data = panel_data)
summary(ols)
ols <- lm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Unemployment_Rate+EU_East, data = panel_data)
summary(ols)
ggplot(panel_data, aes(x=Sanitary_Expense_Per_Capita, y=Life_Expectancy))+
geom_point()+
geom_smooth(method='lm', se=FALSE)+
theme_bw()
fe <- plm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Unemployment_Rate+EU_East, panel_data, index = c('Country','Year'),
model = 'within')
summary(fe)
ols <- lm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Unemployment_Rate+EU_East+Water_Access_Percent, data = panel_data)
summary(ols)
'Slovakia', 'Slovenia', 'Ukraine', 'North Macedonia', 'Kosovo'), 1, 0)
ols <- lm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Unemployment_Rate+EU_East, data = panel_data)
summary(ols)
fe <- plm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Unemployment_Rate+EU_East+Water_Access_Percent, panel_data, index = c('Country','Year'),
model = 'within')
summary(fe)
fe <- plm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Unemployment_Rate+EU_East, panel_data, index = c('Country','Year'),
model = 'within')
summary(fe)
fe <- plm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Unemployment_Rate+EU_East+Water_Access_Percent, panel_data, index = c('Country','Year'),
model = 'within')
summary(fe)
ols <- lm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Unemployment_Rate+EU_East+Water_Access_Percent, data = panel_data)
summary(ols)
yhat <- ols$fitted # valorile estimate ale variabilei dependente
ggplot(panel_data, aes(x=Sanitary_Expense_Per_Capita, y=Life_Expectancy))+
geom_point()+
geom_smooth(method='lm', se=FALSE)+
theme_bw()
fe <- plm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Unemployment_Rate+EU_East+Water_Access_Percent, panel_data, index = c('Country','Year'),
model = 'within')#specific FE
summary(fe)
fe <- plm(Life_Expectancy ~ Unemployment_Rate+EU_East+Water_Access_Percent, panel_data, index = c('Country','Year'),
model = 'within')#specific FE
summary(fe)
fe <- plm(Life_Expectancy ~ Water_Access_Percent, panel_data, index = c('Country','Year'),
model = 'within')#specific FE
summary(fe)
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Vrem sa alegem cea mai adecvata varianta de model ==> comparam regresiile OLS si FE
#Ipoteza nula: OSL Ipoteza alternativa: FE
pFtest(fe, ols)
re <- plm(Life_Expectancy ~ Sanitary_Expense_Per_Capita+Unemployment_Rate+EU_East+Water_Access_Percent, panel_data, index = c('Country','Year'),
model = 'between')
summary(re)
re <- plm(Life_Expectancy ~ Water_Access_Percent, panel_data, index = c('Country','Year'),
model = 'between')
summary(re)
phtest(fe,re)
fixed.time <- plm(Life_Expectancy ~ Water_Access_Percent + factor(Year), data=panel_data, index=c("Country",
"Year"), model="within")
summary(fixed.time)
pFtest(fixed.time, fe) # p-value < 0.05 => se recomanda folosirea efectelor fixe in timp
plmtest(fe, c('time'), type = 'bp') # p-value >0.05  => nu este nevoie sa se
#Vrem sa vedem daca trebuie sa folosim efectele aleatorii
#Testarea efectelor aleatorii cu Breusch-Pagan Lagrange Multiplier (decidem intre RE si OLS)
pool <- plm(Life_Expectancy ~ Water_Access_Percent, data=panel_data, index=c("Country", "Year"), model="pooling")
summary(pool)
pool <- plm(Life_Expectancy ~ Water_Access_Percent, data=panel_data, index=c("Country", "Year"), model="pooling")
summary(pool)
plmtest(pool, type=c("bp"))
#Pentru ambele teste: H0: reziduurile intre tari nu sunt corelate / H1: reziduurile intre entitati sunt corelate
#Testul Breusch-Pagan LM
pcdtest(fe, test = 'lm') # p-value <0.05 => dependenta transversala
#Testul Parasan CD
pcdtest(fe, test = 'cd')
# H0: reziduurile nu sunt autocorelate /  H1: reziduurile sunt autocorelate
pbgtest(fe)
#Deoarece avem putine perioade de timp si autocorelatia apare greu, vom ignora ipoteza
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Ipoteza fundamentala: Testarea heteroschedasticitatii cu testul Breusch-Pagan
# H0: avem homoschedasticitate / H1: avem heteroschedasticitate
bptest(Life_Expectancy ~ Water_Access_Percent + factor(Country), data = panel_data, studentize=F)
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Testarea efectelor random
pFtest(re, ols) # p-value > 0.05 => nu se recomanda efecte random.
plmtest(re, c('time'), type = 'bp') # p-value > 0.05 => nu se recomanda efecte random
